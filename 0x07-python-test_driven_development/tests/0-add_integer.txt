

>>> add_integer = __import__('0-add_integer').add_integer

# Test case 1: Adding two integers
>>> add_integer(1, 2)
3

# Test case 2: Adding an integer and a negative integer
>>> add_integer(100, -2)
98

# Test case 3: Adding a single integer (b takes default value)
>>> add_integer(2)
100

# Test case 4: Adding a float and a negative integer (casts float to int)
>>> add_integer(100.3, -2)
98

# Test case 5: Raises TypeError when a non-integer is passed as the second argument
>>> add_integer(4, "School")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

# Test case 6: Raises TypeError when a non-integer is passed as the first argument
>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# Test case 7: Raises TypeError when a non-integer is passed as both arguments
>>> add_integer("Hello", "World")
Traceback (most recent call last):
    ...
TypeError: a must be an integer
