#Test cases for matrix_divided function

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test case 1: Dividing all elements by a positive integer divisor
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test case 2: Dividing all elements by a negative float divisor
>>> matrix = [[10, 20], [30, 40], [50, 60]]
>>> matrix_divided(matrix, -2.5)
[[-4.0, -8.0], [-12.0, -16.0], [-20.0, -24.0]]

# Test case 3: Dividing elements by 1 (no change in the matrix)
>>> matrix = [[2, 4], [6, 8]]
>>> matrix_divided(matrix, 1)
[[2.0, 4.0], [6.0, 8.0]]

# Test case 4: Raises TypeError for non-numeric divisor
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 'abc')
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test case 5: Raises ZeroDivisionError for divisor equal to zero
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case 6: Raises TypeError for inconsistent row size in matrix
>>> matrix = [[1, 2, 3], [4, 5], [6, 7, 8]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size